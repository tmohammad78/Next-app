{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from \"./actions\";\nimport { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {\n  count: 0,\n  error: false,\n  lastUpdate: 0,\n  light: false,\n  placeholderData: null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      {\n        return _objectSpread(_objectSpread({}, state), action.payload);\n      }\n\n    case actionTypes.FAILURE:\n      return _objectSpread(_objectSpread({}, state), {\n        error: action.error\n      });\n\n    case actionTypes.INCREMENT:\n      return _objectSpread(_objectSpread({}, state), {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _objectSpread(_objectSpread({}, state), {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _objectSpread(_objectSpread({}, state), {\n        count: initialState.count\n      });\n\n    case actionTypes.LOAD_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        placeholderData: action.data\n      });\n\n    case actionTypes.TICK_CLOCK:\n      return _objectSpread(_objectSpread({}, state), {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["E:/MainProject/frontend/Next-app/reducer.js"],"names":["actionTypes","HYDRATE","initialState","count","error","lastUpdate","light","placeholderData","reducer","state","action","type","payload","FAILURE","INCREMENT","DECREMENT","RESET","LOAD_DATA_SUCCESS","data","TICK_CLOCK","ts"],"mappings":";;;;;;AAAA,SAASA,WAAT;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,UAAU,EAAE,CAHO;AAInBC,EAAAA,KAAK,EAAE,KAJY;AAKnBC,EAAAA,eAAe,EAAE;AALE,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,OAAL;AAAc;AACZ,+CAAYQ,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;AACD;;AAED,SAAKZ,WAAW,CAACa,OAAjB;AACE,6CACKJ,KADL,GAEK;AAAEL,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAAhB,OAFL;;AAKF,SAAKJ,WAAW,CAACc,SAAjB;AACE,6CACKL,KADL,GAEK;AAAEN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,GAAc;AAAvB,OAFL;;AAKF,SAAKH,WAAW,CAACe,SAAjB;AACE,6CACKN,KADL,GAEK;AAAEN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,GAAc;AAAvB,OAFL;;AAKF,SAAKH,WAAW,CAACgB,KAAjB;AACE,6CACKP,KADL,GAEK;AAAEN,QAAAA,KAAK,EAAED,YAAY,CAACC;AAAtB,OAFL;;AAKF,SAAKH,WAAW,CAACiB,iBAAjB;AACE,6CACKR,KADL,GAEK;AAAEF,QAAAA,eAAe,EAAEG,MAAM,CAACQ;AAA1B,OAFL;;AAKF,SAAKlB,WAAW,CAACmB,UAAjB;AACE,6CACKV,KADL,GAEK;AAAEJ,QAAAA,UAAU,EAAEK,MAAM,CAACU,EAArB;AAAyBd,QAAAA,KAAK,EAAE,CAAC,CAACI,MAAM,CAACJ;AAAzC,OAFL;;AAKF;AACE,aAAOG,KAAP;AA1CJ;AA4CD;;AAED,eAAeD,OAAf","sourcesContent":["import { actionTypes } from './actions'\nimport { HYDRATE } from 'next-redux-wrapper'\n\nconst initialState = {\n  count: 0,\n  error: false,\n  lastUpdate: 0,\n  light: false,\n  placeholderData: null,\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case HYDRATE: {\n      return { ...state, ...action.payload }\n    }\n\n    case actionTypes.FAILURE:\n      return {\n        ...state,\n        ...{ error: action.error },\n      }\n\n    case actionTypes.INCREMENT:\n      return {\n        ...state,\n        ...{ count: state.count + 1 },\n      }\n\n    case actionTypes.DECREMENT:\n      return {\n        ...state,\n        ...{ count: state.count - 1 },\n      }\n\n    case actionTypes.RESET:\n      return {\n        ...state,\n        ...{ count: initialState.count },\n      }\n\n    case actionTypes.LOAD_DATA_SUCCESS:\n      return {\n        ...state,\n        ...{ placeholderData: action.data },\n      }\n\n    case actionTypes.TICK_CLOCK:\n      return {\n        ...state,\n        ...{ lastUpdate: action.ts, light: !!action.light },\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}