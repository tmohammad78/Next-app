{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { startClock } from \"../actions\";\nimport Page from \"../components/page\";\nimport Router from \"next/router\";\n\nvar Index = function Index() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      logged = _useState[0],\n      setLogged = _useState[1];\n\n  useEffect(function () {\n    if (!logged) {\n      Router.push(\"/auth\");\n    }\n  });\n  useEffect(function () {\n    dispatch(startClock());\n  }, [dispatch]);\n  return;\n};\n\n_s(Index, \"jIrkK8yspuu8xTVL6TdAwv3QOpU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/MainProject/frontend/Next-app/pages/index.js"],"names":["useEffect","useState","useDispatch","startClock","Page","Router","Index","dispatch","logged","setLogged","push"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAAmBC,UAAnB;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADkB,kBAGUD,QAAQ,CAAC,KAAD,CAHlB;AAAA,MAGXO,MAHW;AAAA,MAGHC,SAHG;;AAIlBT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACQ,MAAL,EAAa;AACXH,MAAAA,MAAM,CAACK,IAAP,CAAY,OAAZ;AACD;AACF,GAJQ,CAAT;AAKAV,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA;AACD,CAdD;;GAAMD,K;UACaJ,W;;;KADbI,K;;AA2BN,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { END } from \"redux-saga\";\nimport { wrapper } from \"../store\";\nimport { loadData, startClock, tickClock } from \"../actions\";\nimport Page from \"../components/page\";\nimport Router from \"next/router\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n\n  const [logged, setLogged] = useState(false);\n  useEffect(() => {\n    if (!logged) {\n      Router.push(\"/auth\");\n    }\n  });\n  useEffect(() => {\n    dispatch(startClock());\n  }, [dispatch]);\n\n  return \n};\n\nexport const getStaticProps = wrapper.getStaticProps(async ({ store }) => {\n  store.dispatch(tickClock(false));\n\n  if (!store.getState().placeholderData) {\n    store.dispatch(loadData());\n    store.dispatch(END);\n  }\n\n  await store.sagaTask.toPromise();\n});\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}