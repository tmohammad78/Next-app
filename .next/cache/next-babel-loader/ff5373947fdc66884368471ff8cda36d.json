{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"../saga\";\nvar sagaMiddleware = createSagaMiddleware();\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nvar createStoreApp = function createStoreApp() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : rootInitialState;\n  var store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\n\n  store.runSagaTask = function () {\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n  };\n\n  store.runSagaTask();\n  return store;\n};\n\nexport default createStoreApp;","map":{"version":3,"sources":["E:/MainProject/frontend/Next-app/redux/store.ts"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootSaga","sagaMiddleware","bindMiddleware","middleware","require","composeWithDevTools","createStoreApp","initialState","rootInitialState","store","rootReducer","runSagaTask","sagaTask","run"],"mappings":";AACA,SAASA,eAAT,EAA0BC,WAA1B,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAGA,OAAOC,QAAP;AAKA,IAAMC,cAAc,GAAGF,oBAAoB,EAA3C;;AACA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAqB;AACxC,YAA2C;AAAA,mBACPC,OAAO,CAAC,0BAAD,CADA;AAAA,QAC/BC,mBAD+B,YAC/BA,mBAD+B;;AAEvC,WAAOA,mBAAmB,CAACR,eAAe,MAAf,4BAAmBM,UAAnB,EAAD,CAA1B;AACH;;AACD,SAAON,eAAe,MAAf,4BAAmBM,UAAnB,EAAP;AACH,CAND;;AASA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAqC;AAAA,MAApCC,YAAoC,uEAArBC,gBAAqB;AAExD,MAAMC,KAAK,GAAGX,WAAW,CAACY,WAAD,EAAcH,YAAd,EAA4BL,cAAc,CAAC,CAACD,cAAD,CAAD,CAA1C,CAAzB;;AAEAQ,EAAAA,KAAK,CAACE,WAAN,GAAoB,YAAM;AACtBF,IAAAA,KAAK,CAACG,QAAN,GAAiBX,cAAc,CAACY,GAAf,CAAmBb,QAAnB,CAAjB;AACH,GAFD;;AAIAS,EAAAA,KAAK,CAACE,WAAN;AACA,SAAOF,KAAP;AACH,CAVD;;AAYA,eAAeH,cAAf","sourcesContent":["\r\nimport { applyMiddleware, createStore, Store } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer, { State } from '../reducer';\r\nimport { createWrapper, Context } from 'next-redux-wrapper'\r\nimport rootSaga from '../saga';\r\n\r\nexport interface SagaStore extends Store {\r\n    sagaTask?: any;\r\n}\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst bindMiddleware = (middleware: any) => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const { composeWithDevTools } = require('redux-devtools-extension')\r\n        return composeWithDevTools(applyMiddleware(...middleware))\r\n    }\r\n    return applyMiddleware(...middleware)\r\n}\r\n\r\n\r\nconst createStoreApp = (initialState = rootInitialState) => {\r\n\r\n    const store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\r\n\r\n    store.runSagaTask = () => {\r\n        store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    };\r\n\r\n    store.runSagaTask();\r\n    return store;\r\n}\r\n\r\nexport default createStoreApp"]},"metadata":{},"sourceType":"module"}