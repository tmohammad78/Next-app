{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\MainProject\\\\frontend\\\\Next-app\\\\src\\\\Hoc\\\\Auth\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar AuthRequire = function AuthRequire(ComposedComponent) {\n  var _s = $RefreshSig$();\n\n  return _s(function () {\n    _s();\n\n    var auth = useSelector(function (state) {\n      return state.auth;\n    });\n\n    if (auth.logged) {\n      return __jsx(ComposedComponent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 20\n        }\n      }));\n    }\n\n    return __jsx(Redirect, {\n      to: {\n        pathname: '/auth',\n        state: props.location\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }\n    });\n  }, \"SvwR9yfdOSlAizXx+1ujAxpoAFQ=\", true);\n};\n\n_c = AuthRequire;\nexport default AuthRequire;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRequire\");","map":{"version":3,"sources":["E:/MainProject/frontend/Next-app/src/Hoc/Auth/index.tsx"],"names":["React","AuthRequire","ComposedComponent","auth","useSelector","state","logged","props","pathname","location"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,iBAAD,EAA4B;AAAA;;AAE5C,YAAO,YAAM;AAAA;;AACT,QAAMC,IAAI,GAAGC,WAAW,CAA+B,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACF,IAAV;AAAA,KAApC,CAAxB;;AACA,QAAIA,IAAI,CAACG,MAAT,EAAiB;AACb,aAAO,MAAC,iBAAD,eAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AACD,WAAO,MAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACjBC,QAAAA,QAAQ,EAAE,OADO;AAEjBH,QAAAA,KAAK,EAAEE,KAAK,CAACE;AAFI,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIH,GATD;AAUH,CAZD;;KAAMR,W;AAcN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\n\r\nconst AuthRequire = (ComposedComponent: any) => {\r\n\r\n    return () => {\r\n        const auth = useSelector<IApplicationState, AuthState>(state => state.auth);\r\n        if (auth.logged) {\r\n            return <ComposedComponent {...props} />\r\n        }\r\n        return <Redirect to={{\r\n            pathname: '/auth',\r\n            state: props.location\r\n        }} />\r\n    }\r\n}\r\n\r\nexport default AuthRequire;"]},"metadata":{},"sourceType":"module"}