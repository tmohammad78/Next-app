{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\MainProject\\\\frontend\\\\Next-app\\\\src\\\\Hoc\\\\Auth\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from \"next/router\";\n\nvar AuthRequire = function AuthRequire(_ref) {\n  var _s = $RefreshSig$();\n\n  var ComposedComponent = _ref.ComposedComponent;\n  return _s(function (props) {\n    _s();\n\n    // const auth = useSelector<IApplicationState, AuthState>(state => state.auth);\n    var _useState = useState(false),\n        logged = _useState[0],\n        setLogged = _useState[1];\n\n    if (logged) {\n      __jsx(Chil, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }\n      }));\n    } // if (auth.logged) {\n    //     return <ComposedComponent {...props} />\n    // }\n\n\n    return Router.push(\"/auth\");\n  }, \"65h5yPFHX7llNF/8z9vDbAXASqw=\");\n};\n\n_c = AuthRequire;\nexport default AuthRequire;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRequire\");","map":{"version":3,"sources":["E:/MainProject/frontend/Next-app/src/Hoc/Auth/index.tsx"],"names":["React","useState","Router","AuthRequire","ComposedComponent","props","logged","setLogged","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgC;AAAA;;AAAA,MAA7BC,iBAA6B,QAA7BA,iBAA6B;AAChD,YAAO,UAACC,KAAD,EAAgB;AAAA;;AACnB;AADmB,oBAESJ,QAAQ,CAAC,KAAD,CAFjB;AAAA,QAEZK,MAFY;AAAA,QAEJC,SAFI;;AAGnB,QAAID,MAAJ,EAAY;AACR,YAAC,IAAD,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KALkB,CAMnB;AACA;AACA;;;AACA,WAAOH,MAAM,CAACM,IAAP,CAAY,OAAZ,CAAP;AACH,GAVD;AAWH,CAZD;;KAAML,W;AAcN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Router from \"next/router\";\r\n\r\nconst AuthRequire = ({ ComposedComponent }: any) => {\r\n    return (props: any) => {\r\n        // const auth = useSelector<IApplicationState, AuthState>(state => state.auth);\r\n        const [logged, setLogged] = useState(false);\r\n        if (logged) {\r\n            <Chil {...props} />\r\n        }\r\n        // if (auth.logged) {\r\n        //     return <ComposedComponent {...props} />\r\n        // }\r\n        return Router.push(\"/auth\");\r\n    }\r\n}\r\n\r\nexport default AuthRequire;"]},"metadata":{},"sourceType":"module"}