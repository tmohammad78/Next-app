{"ast":null,"code":"var _jsxFileName = \"E:\\\\MainProject\\\\frontend\\\\Next-app\\\\src\\\\Hoc\\\\Auth\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, Children } from 'react';\nimport Router from \"next/router\";\n\nconst AuthRequire = () => {\n  return props => {\n    // const auth = useSelector<IApplicationState, AuthState>(state => state.auth);\n    const {\n      0: logged,\n      1: setLogged\n    } = useState(false);\n\n    if (logged) {\n      __jsx(Children, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }\n      }));\n    } // if (auth.logged) {\n    //     return <ComposedComponent {...props} />\n    // }\n\n\n    return Router.push(\"/auth\");\n  };\n};\n\nexport default AuthRequire;","map":{"version":3,"sources":["E:/MainProject/frontend/Next-app/src/Hoc/Auth/index.tsx"],"names":["React","useState","Children","Router","AuthRequire","props","logged","setLogged","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,SAAQC,KAAD,IAAgB;AACnB;AACA,UAAM;AAAA,SAACC,MAAD;AAAA,SAASC;AAAT,QAAsBN,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAIK,MAAJ,EAAY;AACR,YAAC,QAAD,eAAcD,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KALkB,CAMnB;AACA;AACA;;;AACA,WAAOF,MAAM,CAACK,IAAP,CAAY,OAAZ,CAAP;AACH,GAVD;AAWH,CAZD;;AAcA,eAAeJ,WAAf","sourcesContent":["import React, { useState, Children } from 'react';\r\nimport Router from \"next/router\";\r\n\r\nconst AuthRequire = () => {\r\n    return (props: any) => {\r\n        // const auth = useSelector<IApplicationState, AuthState>(state => state.auth);\r\n        const [logged, setLogged] = useState(false);\r\n        if (logged) {\r\n            <Children {...props} />\r\n        }\r\n        // if (auth.logged) {\r\n        //     return <ComposedComponent {...props} />\r\n        // }\r\n        return Router.push(\"/auth\");\r\n    }\r\n}\r\n\r\nexport default AuthRequire;"]},"metadata":{},"sourceType":"module"}