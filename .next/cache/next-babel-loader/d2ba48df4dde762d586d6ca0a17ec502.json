{"ast":null,"code":"var _jsxFileName = \"E:\\\\MainProject\\\\frontend\\\\Next-app\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { END } from 'redux-saga';\nimport { wrapper } from \"../store\";\nimport { loadData, startClock, tickClock } from \"../actions\";\nimport Page from \"../components/page\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n  const {\n    0: logged,\n    1: setLogged\n  } = useState(fa);\n  useEffect(() => {\n    dispatch(startClock());\n  }, [dispatch]);\n  return __jsx(Page, {\n    title: \"Index Page\",\n    linkTo: \"/other\",\n    NavigateTo: \"Other Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  });\n};\n\nexport const getStaticProps = wrapper.getStaticProps(async ({\n  store\n}) => {\n  store.dispatch(tickClock(false));\n\n  if (!store.getState().placeholderData) {\n    store.dispatch(loadData());\n    store.dispatch(END);\n  }\n\n  await store.sagaTask.toPromise();\n});\nexport default Index;","map":{"version":3,"sources":["E:/MainProject/frontend/Next-app/pages/index.js"],"names":["useEffect","useState","useDispatch","END","wrapper","loadData","startClock","tickClock","Page","Index","dispatch","logged","setLogged","fa","getStaticProps","store","getState","placeholderData","sagaTask","toPromise"],"mappings":";;;AAAA,SAASA,SAAT,EAAsBC,QAAtB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,OAAT;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B;AACA,OAAOC,IAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAA,OAACS,MAAD;AAAA,OAAUC;AAAV,MAAuBX,QAAQ,CAACY,EAAD,CAArC;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA,SAAO,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAyB,IAAA,MAAM,EAAC,QAAhC;AAAyC,IAAA,UAAU,EAAC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CATD;;AAWA,OAAO,MAAMI,cAAc,GAAGV,OAAO,CAACU,cAAR,CAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACxEA,EAAAA,KAAK,CAACL,QAAN,CAAeH,SAAS,CAAC,KAAD,CAAxB;;AAEA,MAAI,CAACQ,KAAK,CAACC,QAAN,GAAiBC,eAAtB,EAAuC;AACrCF,IAAAA,KAAK,CAACL,QAAN,CAAeL,QAAQ,EAAvB;AACAU,IAAAA,KAAK,CAACL,QAAN,CAAeP,GAAf;AACD;;AAED,QAAMY,KAAK,CAACG,QAAN,CAAeC,SAAf,EAAN;AACD,CAT6B,CAAvB;AAWP,eAAeV,KAAf","sourcesContent":["import { useEffect ,  useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { END } from 'redux-saga'\nimport { wrapper } from '../store'\nimport { loadData, startClock, tickClock } from '../actions'\nimport Page from '../components/page'\n\nconst Index = () => {\n  const dispatch = useDispatch()\n\n  const [logged , setLogged] = useState(fa)\n  useEffect(() => {\n    dispatch(startClock())\n  }, [dispatch])\n\n  return <Page title=\"Index Page\" linkTo=\"/other\" NavigateTo=\"Other Page\" />\n}\n\nexport const getStaticProps = wrapper.getStaticProps(async ({ store }) => {\n  store.dispatch(tickClock(false))\n\n  if (!store.getState().placeholderData) {\n    store.dispatch(loadData())\n    store.dispatch(END)\n  }\n\n  await store.sagaTask.toPromise()\n})\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}